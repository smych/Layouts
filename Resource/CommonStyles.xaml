<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Start -->

    <!-- Стиль Формата текста -->
    <Style x:Key="TextBlockStyle"
       TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground"
            Value="#000" />
    <Setter Property="FontFamily"
            Value="Verdana" />
    <Setter Property="FontWeight"
            Value="Bold" />
    <Setter Property="FontSize"
            Value="16" />
    <Setter Property="HorizontalAlignment"
            Value="Center" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
    </Style>
    
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Мой шаблон ToggleButton 1 -->

    <!--<ToggleButton x:Name="changeButBorderedBlinky" Margin="0,12,194,0" Width="82" Height="82" Background="Transparent" Padding="-1"  Focusable="false" VerticalAlignment="Top" HorizontalAlignment="Right">
        <ToggleButton.Style>

            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Content">
                    <Setter.Value>
                        <Border BorderThickness="0"  >
                            <Image Source="images/buttonimages/back2.png" Stretch="Fill"  />
                        </Border>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Border  BorderThickness="0" >
                                    <Image Source="images/buttonimages/back.png" Stretch="fill" />
                                </Border>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ToggleButton.Style>
    </ToggleButton>-->

    <!-- END Мой шаблон ToggleButton 1 -->

    <!-- Задаем стиль ToggleButton -->
    
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="auto" />

        <!-- Задаем шаблон -->
            <Setter Property="Template">
            <Setter.Value>

                <!-- Задаем шаблон кнопки раскрытия -->
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Width="20"
                            Height="20"
                            Margin="5"
                            Background="Transparent">

                        <Border
                                SnapsToDevicePixels="true"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                BorderThickness="0">

                            <Grid >
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0,1"
                                                             StartPoint="0,0">
                                            <GradientStop Color="#7FD4FF"
                                                          Offset="0" />
                                            <GradientStop Color="#00AAFF"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Line Stroke="#112844"
                                      x:Name="ExpandImg"
                                      StrokeThickness="1"
                                      X1="8"
                                      Y1="2"
                                      X2="8"
                                      Y2="14" />
                                <Line Stroke="#112844"
                                      StrokeThickness="1"
                                      X1="2"
                                      Y1="8"
                                      X2="14"
                                      Y2="8" />
                                
                                <!-- Если нужно чтобы отображались папки вместо плюсиков
                                
                                <Image x:Name="OpenImg" Source="/Images/FolderOpen.png" Stretch="Fill"  />
                                <Image x:Name="CollapsedImg" Source="/Images/Folder.png"  Stretch="Fill"  />
                                
                                -->

                            </Grid>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">

                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    Value="Visible" />
                            
                            <!--<Setter Property="Visibility"
                                    TargetName="CollapsedImg" 
                                    Value="Collapsed" />
                            <Setter Property="Visibility"
                                    TargetName="OpenImg"
                                    Value="Visible" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>
    
    <!-- END Задаем шаблон ToggleButton -->
    
    <Style x:Key="TreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded"
                Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="1,0,0,0" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    
                    <Grid>
                        <Grid.ColumnDefinitions>
                            
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        
                        <!-- мои добавления в стиль ToggleButton №1 -->
                            
                        <!--<ToggleButton x:Name="Expander" 
                                      Width="20" 
                                      Height="20" 
                                      Background="Transparent" 
                                      Padding="-1"  
                                      Focusable="false" 
                                      VerticalAlignment="Stretch" 
                                      HorizontalAlignment="Stretch"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Margin="5"
                                      >
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Border BorderThickness="0"  >
                                                <Image Source="/Images/Folder.png" Stretch="Fill"  />
                                            </Border>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Border  BorderThickness="0" >
                                                        <Image Source="/Images/FolderOpen.png" Stretch="fill" />
                                                    </Border>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>-->
                        
                        <!-- END мои добавления в стиль ToggleButton №1 -->


                        <!--  мои добавления в стиль ToggleButton №2 -->
                        
                        <!--<ToggleButton 
                            x:Name="Expander" 
                                      Width="20" 
                                      Height="20" 
                                      Background="Transparent" 
                                      Padding="-1"  
                                      Focusable="false" 
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Center"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            >
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ContentPresenter 
                                        x:Name="contentPresenter" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Content="{TemplateBinding Content}" 
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                        Focusable="False" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" 
                                        RecognizesAccessKey="True" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        />
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True"/>
                                        <Trigger Property="IsMouseOver" Value="True"/>
                                        <Trigger Property="IsPressed" Value="True"/>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True"/>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" 
                                                    TargetName="contentPresenter" 
                                                    Value="#FF838383"/>
                                        </Trigger>
                                        -->
                        
                        <!--
                        <Trigger Property="IsChecked"
                                 Value="True">
                                 <Setter Property="Visibility"
                                         TargetName="Img"
                                         Value="Collapsed" />
                        </Trigger>
                        -->
                                    
                        <!--
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Border BorderThickness="0"  >
                                                <Image x:Name="Img" Source="W:\WPF\TreeView\MyWorkTreeView\TreeViewStyleTemplate ver004\Images\Folder.png" Stretch="Fill"  />
                                            </Border>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Border  BorderThickness="0" >
                                                        <Image Source="W:\WPF\TreeView\MyWorkTreeView\TreeViewStyleTemplate ver004\Images\FolderOpen.png" Stretch="fill" />
                                                    </Border>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>

                        </ToggleButton>-->

                        <!--  end мои добавления в стиль ToggleButton №2 -->

                        <!-- Default -->
                        
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                        
                        <!-- End Default -->

                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            
                        </Border>
                        
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter Property="Visibility"
                                    TargetName="Expander"
                                    Value="Hidden" />
                        </Trigger>
                        
                        <Trigger Property="IsSelected"
                                 Value="true" >
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="IsSelectionActive"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                     Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="EmployeeDateTemplate">
        <StackPanel Orientation="Horizontal">
            <CheckBox Focusable="False"
                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                      VerticalAlignment="Center" Margin="5" />
            <TextBlock Text="{Binding EmployeeName}"
                       VerticalAlignment="Center" Margin="5" />
        </StackPanel>
    </DataTemplate>

    <!-- Мои Изменения: Добавляем новый шаблон -->
    <HierarchicalDataTemplate x:Key="DepartmentTemplate"
                              ItemsSource="{Binding ChildDeportamentCollection}"
                              >
        <!--ItemTemplate="{StaticResource DepartmentTemplate1}"-->
        <!--ItemsSource="{Binding ChildDeportamentCollection}"-->
        
        <StackPanel Orientation="Horizontal">
            <!--<CheckBox Focusable="False" Margin="5"
                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                      VerticalAlignment="Center" />-->
            <TextBlock Text="{Binding DepartmentName}"
                       Margin="5 5 10 10" />
        </StackPanel>
    </HierarchicalDataTemplate>


    <!-- END Мои Изменения -->

    <!-- End -->

</ResourceDictionary>